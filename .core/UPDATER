#!/bin/sh

#. $origin/.core/CONTROL
#. /home/kali/.xfiles/projects/bifrost/.core/CONTROL

print_version() {
    # Load the local version from the CONTROL file
    local_version=$(grep -o 'version="[^"]*"' $origin/.core/CONTROL | sed 's/version="//;s/"//')

    # Define the URL of the remote CONTROL file
    remote_url="https://raw.githubusercontent.com/yonasuriv/Bifrost/main/.core/CONTROL"

    # Function to fetch the remote version
    get_remote_version() {
        # Use curl to fetch the remote CONTROL file and extract the version value
        remote_version=$(curl -s "$remote_url" | grep -o 'version="[^"]*"' | sed 's/version="//;s/"//')
        echo "$remote_version"
    }

    # Compare the local and remote versions
    compare_versions() {
        local_version="$1"
        remote_version="$2"

        if [ "$local_version" = "$remote_version" ]; then
            echo
            echo "$dim Bifrost Link Version: $version$end $yellow2[NEW UPDATES AVAILABLES $remote_version]$end"
        else
            echo
            echo "$dim Bifrost Link Version: $version$end $green2[UP TO DATE]$end"
        fi
    }

    # Fetch the remote version
    remote_version=$(get_remote_version)

    # Compare the versions
    compare_versions "$local_version" "$remote_version"
    }

update_start () {
    git clone https://github.com/yonasuriv/bifrost.git > /dev/null 2>&1 && cd bifrost && sh BuildBifrostBridge > /dev/null 2>&1
    . $origin/.core/CONTROL
    }

update() {
    # Load the local version from the CONTROL file
    local_version=$(grep -o 'version="[^"]*"' $origin/.core/CONTROL | sed 's/version="//;s/"//')

    # Define the URL of the remote CONTROL file
    remote_url="https://raw.githubusercontent.com/yonasuriv/Bifrost/main/.core/CONTROL"

    # Function to fetch the remote version
    get_remote_version() {
        # Use curl to fetch the remote CONTROL file and extract the version value
        remote_version=$(curl -s "$remote_url" | grep -o 'version="[^"]*"' | sed 's/version="//;s/"//')
        echo "$remote_version"
    }

    # Compare the local and remote versions
    compare_versions() {
        local_version="$1"
        remote_version="$2"

        if [ "$local_version" = "$remote_version" ]; then
            echo "$green Bifrost Link is currently in the last version ($local_version).$end"
        else
            echo " Local version $yellow2($local_version)$end is different from remote version $cyan2($remote_version)$end."
            echo 
            echo "$dim Initializing Bifrost Link Updater..$end"
            sleep 2
            echo
            update_start
            echo "\033[1;32m Bifrost Link successfully updated to the last version. \033[0m"
        fi
    }

    # Fetch the remote version
    remote_version=$(get_remote_version)

    # Compare the versions
    compare_versions "$local_version" "$remote_version"
    }
