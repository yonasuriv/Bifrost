#!/bin/sh

. $origin/.core/CONTROL

tmp_folder=zzz_BifrostEphemeral.tmp

tmp() {
    rm -r "$origin/projects/$tmp_folder" > /dev/null 2>&1
    mkdir -p "$origin/projects/$tmp_folder"
    cd "$origin/projects/$tmp_folder" #|| exit
    cp "$origin/.assets/TARGET-DUMMY" "$origin/projects/$tmp_folder/TARGET"
}

list_projects() {
    local project_index=1
    local found_projects=false

    for project_dir in $origin/projects/*/; do
        if [ -d "$project_dir" ] && [ "$(basename "$project_dir")" != "$tmp_folder" ]; then
            project_name=$(basename "$project_dir")
            echo "  $project_index) $dim[PROJECT]$end $cyan2$project_name$end"
            project_index=$((project_index + 1))
            found_projects=true
        fi
    done

    if [ "$found_projects" = false ] || [ ! -d "$origin/projects/$tmp_folder" ]; then
        echo " $red [NO PROJECTS FOUND]$end$dim Once created, they will appear here.$end"
    fi
}

# Function to display the project menu
projects_menu() {
    local project_name="$1"

    while true; do
        echo
        echo "$negative BIFROST PROJECT LINK $end"
        echo
        list_projects
        echo 
        echo "  N) Create New Project"
        echo "  T) Create New Temporary Project"
        echo
        echo -n "     Enter your choice: $white" && read choice
        echo "$end"
        projects_menu_select
        done
        }

projects_menu_select() {
    counter=1

    # Loop through each folder in the current directory
    for project_dir in $origin/projects/*/; do
        project_name=$(basename "$project_dir")  # Remove trailing slash and path
        #echo "$counter. $project_name"  # Print the option
        counter=$((counter + 1))  # Increment the counter
    done

    if [ "$choice" = "t" ] || [ "$choice" = "T" ]; then
        tmp
        echo " $yellow2[EPHEMERAL]$end Initializing$white Temporary Project$end."
        sleep 3
        target_prompt
        start
    elif [ "$choice" = "n" ] || [ "$choice" = "N" ]; then
        echo -n "     Enter project name: $green" && read project_name
        mkdir -p "$origin/projects/$project_name"
        cd "$origin/projects/$project_name" || exit
        echo "$end"
        cp "$origin/.assets/TARGET-DUMMY" "$origin/projects/$project_name/TARGET"
        echo " $green2[PROJECT CREATED]$end Initializing $white$project_name$end."
        sleep 3
        target_prompt
        start
    elif [ "$choice" = "0" ]; then
        credits
        exit
    else
        if [ "$choice" -ge 1 ] && [ "$choice" -lt "$counter" ]; then
            counter=1
            for project_dir in $origin/projects/*/; do
                if [ "$counter" -eq "$choice" ]; then
                    selected_folder=$(basename "$project_dir")
                    break
                fi
                counter=$((counter + 1))
            done
            echo " $cyan2[PROJECT FOUND]$end Initializing $white$selected_folder$end."
            sleep 3
            cd "$origin/projects/$selected_folder"
            target_prompt
            start
        else
            echo
            echo -n "\033[2A\033[0K $red    Incorrect selection. Aborting. $end"
            exit
        fi
    fi
}

no_project() {
    echo
    echo " No Project Selected. Entering Ephemeral mode.."
    sleep 2
    echo
    echo " $yellow2[EPHEMERAL]$end Initializing$white Temporary Project$end."
    sleep 3
    tmp
    target_prompt
}

project_found() {
    echo
    echo " $cyan2[PROJECT FOUND]$end Initializing $white$project_name$end."
    sleep 3
    cd "$origin/projects/$project_name"
    target_prompt
    start
    }

project_create() {
    mkdir -p "$origin/projects/$project_name"
    cd "$origin/projects/$project_name" || exit
    echo "$green"
    cp "$origin/.assets/TARGET-DUMMY" "$origin/projects/$project_name/TARGET"
    echo " $green2[PROJECT CREATED]$end Initializing $white$project_name$end."
    sleep 2
    target_prompt
    start
    }